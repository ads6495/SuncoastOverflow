// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using suncoastoverflow;

namespace sdgreacttemplate.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190928185825_AddedQuestionAndAnswerTable")]
    partial class AddedQuestionAndAnswerTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SuncoastOverflow.Models.AnswerPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnswerContent");

                    b.Property<DateTime>("DateOfPost");

                    b.Property<string>("PraisesForAnswer");

                    b.Property<int?>("QuestionPostId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionPostId");

                    b.ToTable("AnswerPosts");
                });

            modelBuilder.Entity("SuncoastOverflow.Models.QuestionPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateOfPost");

                    b.Property<string>("Description");

                    b.Property<int>("PraisesForQuestion");

                    b.HasKey("Id");

                    b.ToTable("QuestionPosts");
                });

            modelBuilder.Entity("SuncoastOverflow.Models.AnswerPost", b =>
                {
                    b.HasOne("SuncoastOverflow.Models.QuestionPost", "QuestionPost")
                        .WithMany("AnswerPost")
                        .HasForeignKey("QuestionPostId");
                });
#pragma warning restore 612, 618
        }
    }
}
